// Code generated by protoc-gen-go.
// source: Input.proto
// DO NOT EDIT!

package hello

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type SyncResponse_RoomConditions int32

const (
	SyncResponse_IDEAL   SyncResponse_RoomConditions = 1
	SyncResponse_WARNING SyncResponse_RoomConditions = 2
	SyncResponse_ALERT   SyncResponse_RoomConditions = 3
)

var SyncResponse_RoomConditions_name = map[int32]string{
	1: "IDEAL",
	2: "WARNING",
	3: "ALERT",
}
var SyncResponse_RoomConditions_value = map[string]int32{
	"IDEAL":   1,
	"WARNING": 2,
	"ALERT":   3,
}

func (x SyncResponse_RoomConditions) Enum() *SyncResponse_RoomConditions {
	p := new(SyncResponse_RoomConditions)
	*p = x
	return p
}
func (x SyncResponse_RoomConditions) String() string {
	return proto.EnumName(SyncResponse_RoomConditions_name, int32(x))
}
func (x SyncResponse_RoomConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *SyncResponse_RoomConditions) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SyncResponse_RoomConditions_value, data, "SyncResponse_RoomConditions")
	if err != nil {
		return err
	}
	*x = SyncResponse_RoomConditions(value)
	return nil
}

type SyncResponse_PairingAction_ActionType int32

const (
	SyncResponse_PairingAction_PAIR   SyncResponse_PairingAction_ActionType = 0
	SyncResponse_PairingAction_UNPAIR SyncResponse_PairingAction_ActionType = 1
)

var SyncResponse_PairingAction_ActionType_name = map[int32]string{
	0: "PAIR",
	1: "UNPAIR",
}
var SyncResponse_PairingAction_ActionType_value = map[string]int32{
	"PAIR":   0,
	"UNPAIR": 1,
}

func (x SyncResponse_PairingAction_ActionType) Enum() *SyncResponse_PairingAction_ActionType {
	p := new(SyncResponse_PairingAction_ActionType)
	*p = x
	return p
}
func (x SyncResponse_PairingAction_ActionType) String() string {
	return proto.EnumName(SyncResponse_PairingAction_ActionType_name, int32(x))
}
func (x SyncResponse_PairingAction_ActionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *SyncResponse_PairingAction_ActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SyncResponse_PairingAction_ActionType_value, data, "SyncResponse_PairingAction_ActionType")
	if err != nil {
		return err
	}
	*x = SyncResponse_PairingAction_ActionType(value)
	return nil
}

type SyncResponse struct {
	UploadCycle            *int32                       `protobuf:"varint,1,opt,name=upload_cycle" json:"upload_cycle,omitempty"`
	SyncCycle              *int32                       `protobuf:"varint,2,opt,name=sync_cycle" json:"sync_cycle,omitempty"`
	AccScanCyle            *int32                       `protobuf:"varint,3,opt,name=acc_scan_cyle" json:"acc_scan_cyle,omitempty"`
	AccSamplingInterval    *int32                       `protobuf:"varint,4,opt,name=acc_sampling_interval" json:"acc_sampling_interval,omitempty"`
	DeviceSamplingInterval *int32                       `protobuf:"varint,5,opt,name=device_sampling_interval" json:"device_sampling_interval,omitempty"`
	Alarm                  *SyncResponse_Alarm          `protobuf:"bytes,6,opt,name=alarm" json:"alarm,omitempty"`
	PairingAction          *SyncResponse_PairingAction  `protobuf:"bytes,7,opt,name=pairing_action" json:"pairing_action,omitempty"`
	WhiteNoise             *SyncResponse_WhiteNoise     `protobuf:"bytes,8,opt,name=white_noise" json:"white_noise,omitempty"`
	FlashAction            *SyncResponse_FlashAction    `protobuf:"bytes,9,opt,name=flash_action" json:"flash_action,omitempty"`
	ResetDevice            *bool                        `protobuf:"varint,10,opt,name=reset_device" json:"reset_device,omitempty"`
	RoomConditions         *SyncResponse_RoomConditions `protobuf:"varint,12,opt,name=room_conditions,enum=hello.SyncResponse_RoomConditions" json:"room_conditions,omitempty"`
	Files                  []*SyncResponse_FileDownload `protobuf:"bytes,13,rep,name=files" json:"files,omitempty"`
	XXX_unrecognized       []byte                       `json:"-"`
}

func (m *SyncResponse) Reset()         { *m = SyncResponse{} }
func (m *SyncResponse) String() string { return proto.CompactTextString(m) }
func (*SyncResponse) ProtoMessage()    {}

func (m *SyncResponse) GetUploadCycle() int32 {
	if m != nil && m.UploadCycle != nil {
		return *m.UploadCycle
	}
	return 0
}

func (m *SyncResponse) GetSyncCycle() int32 {
	if m != nil && m.SyncCycle != nil {
		return *m.SyncCycle
	}
	return 0
}

func (m *SyncResponse) GetAccScanCyle() int32 {
	if m != nil && m.AccScanCyle != nil {
		return *m.AccScanCyle
	}
	return 0
}

func (m *SyncResponse) GetAccSamplingInterval() int32 {
	if m != nil && m.AccSamplingInterval != nil {
		return *m.AccSamplingInterval
	}
	return 0
}

func (m *SyncResponse) GetDeviceSamplingInterval() int32 {
	if m != nil && m.DeviceSamplingInterval != nil {
		return *m.DeviceSamplingInterval
	}
	return 0
}

func (m *SyncResponse) GetAlarm() *SyncResponse_Alarm {
	if m != nil {
		return m.Alarm
	}
	return nil
}

func (m *SyncResponse) GetPairingAction() *SyncResponse_PairingAction {
	if m != nil {
		return m.PairingAction
	}
	return nil
}

func (m *SyncResponse) GetWhiteNoise() *SyncResponse_WhiteNoise {
	if m != nil {
		return m.WhiteNoise
	}
	return nil
}

func (m *SyncResponse) GetFlashAction() *SyncResponse_FlashAction {
	if m != nil {
		return m.FlashAction
	}
	return nil
}

func (m *SyncResponse) GetResetDevice() bool {
	if m != nil && m.ResetDevice != nil {
		return *m.ResetDevice
	}
	return false
}

func (m *SyncResponse) GetRoomConditions() SyncResponse_RoomConditions {
	if m != nil && m.RoomConditions != nil {
		return *m.RoomConditions
	}
	return 0
}

func (m *SyncResponse) GetFiles() []*SyncResponse_FileDownload {
	if m != nil {
		return m.Files
	}
	return nil
}

type SyncResponse_FileDownload struct {
	Host                      *string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Url                       *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	CopyToSerialFlash         *bool   `protobuf:"varint,4,opt,name=copy_to_serial_flash" json:"copy_to_serial_flash,omitempty"`
	ResetNetworkProcessor     *bool   `protobuf:"varint,5,opt,name=reset_network_processor" json:"reset_network_processor,omitempty"`
	ResetApplicationProcessor *bool   `protobuf:"varint,6,opt,name=reset_application_processor" json:"reset_application_processor,omitempty"`
	SerialFlashFilename       *string `protobuf:"bytes,7,opt,name=serial_flash_filename" json:"serial_flash_filename,omitempty"`
	SerialFlashPath           *string `protobuf:"bytes,8,opt,name=serial_flash_path" json:"serial_flash_path,omitempty"`
	SdCardFilename            *string `protobuf:"bytes,3,opt,name=sd_card_filename" json:"sd_card_filename,omitempty"`
	SdCardPath                *string `protobuf:"bytes,9,opt,name=sd_card_path" json:"sd_card_path,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *SyncResponse_FileDownload) Reset()         { *m = SyncResponse_FileDownload{} }
func (m *SyncResponse_FileDownload) String() string { return proto.CompactTextString(m) }
func (*SyncResponse_FileDownload) ProtoMessage()    {}

func (m *SyncResponse_FileDownload) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetCopyToSerialFlash() bool {
	if m != nil && m.CopyToSerialFlash != nil {
		return *m.CopyToSerialFlash
	}
	return false
}

func (m *SyncResponse_FileDownload) GetResetNetworkProcessor() bool {
	if m != nil && m.ResetNetworkProcessor != nil {
		return *m.ResetNetworkProcessor
	}
	return false
}

func (m *SyncResponse_FileDownload) GetResetApplicationProcessor() bool {
	if m != nil && m.ResetApplicationProcessor != nil {
		return *m.ResetApplicationProcessor
	}
	return false
}

func (m *SyncResponse_FileDownload) GetSerialFlashFilename() string {
	if m != nil && m.SerialFlashFilename != nil {
		return *m.SerialFlashFilename
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetSerialFlashPath() string {
	if m != nil && m.SerialFlashPath != nil {
		return *m.SerialFlashPath
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetSdCardFilename() string {
	if m != nil && m.SdCardFilename != nil {
		return *m.SdCardFilename
	}
	return ""
}

func (m *SyncResponse_FileDownload) GetSdCardPath() string {
	if m != nil && m.SdCardPath != nil {
		return *m.SdCardPath
	}
	return ""
}

type SyncResponse_Alarm struct {
	StartTime                 *uint32 `protobuf:"varint,1,opt,name=start_time" json:"start_time,omitempty"`
	EndTime                   *uint32 `protobuf:"varint,2,opt,name=end_time" json:"end_time,omitempty"`
	RingtoneId                *int32  `protobuf:"varint,3,opt,name=ringtone_id,def=1" json:"ringtone_id,omitempty"`
	RingOffsetFromNowInSecond *int32  `protobuf:"varint,4,opt,name=ring_offset_from_now_in_second" json:"ring_offset_from_now_in_second,omitempty"`
	RingDurationInSecond      *int32  `protobuf:"varint,5,opt,name=ring_duration_in_second" json:"ring_duration_in_second,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *SyncResponse_Alarm) Reset()         { *m = SyncResponse_Alarm{} }
func (m *SyncResponse_Alarm) String() string { return proto.CompactTextString(m) }
func (*SyncResponse_Alarm) ProtoMessage()    {}

const Default_SyncResponse_Alarm_RingtoneId int32 = 1

func (m *SyncResponse_Alarm) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *SyncResponse_Alarm) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *SyncResponse_Alarm) GetRingtoneId() int32 {
	if m != nil && m.RingtoneId != nil {
		return *m.RingtoneId
	}
	return Default_SyncResponse_Alarm_RingtoneId
}

func (m *SyncResponse_Alarm) GetRingOffsetFromNowInSecond() int32 {
	if m != nil && m.RingOffsetFromNowInSecond != nil {
		return *m.RingOffsetFromNowInSecond
	}
	return 0
}

func (m *SyncResponse_Alarm) GetRingDurationInSecond() int32 {
	if m != nil && m.RingDurationInSecond != nil {
		return *m.RingDurationInSecond
	}
	return 0
}

type SyncResponse_PairingAction struct {
	Ssid             *string                                `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Type             *SyncResponse_PairingAction_ActionType `protobuf:"varint,2,opt,name=type,enum=hello.SyncResponse_PairingAction_ActionType" json:"type,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *SyncResponse_PairingAction) Reset()         { *m = SyncResponse_PairingAction{} }
func (m *SyncResponse_PairingAction) String() string { return proto.CompactTextString(m) }
func (*SyncResponse_PairingAction) ProtoMessage()    {}

func (m *SyncResponse_PairingAction) GetSsid() string {
	if m != nil && m.Ssid != nil {
		return *m.Ssid
	}
	return ""
}

func (m *SyncResponse_PairingAction) GetType() SyncResponse_PairingAction_ActionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type SyncResponse_WhiteNoise struct {
	StartTime        *int32 `protobuf:"varint,1,opt,name=start_time" json:"start_time,omitempty"`
	EndTime          *int32 `protobuf:"varint,2,opt,name=end_time" json:"end_time,omitempty"`
	SoundId          *int32 `protobuf:"varint,3,opt,name=sound_id" json:"sound_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SyncResponse_WhiteNoise) Reset()         { *m = SyncResponse_WhiteNoise{} }
func (m *SyncResponse_WhiteNoise) String() string { return proto.CompactTextString(m) }
func (*SyncResponse_WhiteNoise) ProtoMessage()    {}

func (m *SyncResponse_WhiteNoise) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *SyncResponse_WhiteNoise) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *SyncResponse_WhiteNoise) GetSoundId() int32 {
	if m != nil && m.SoundId != nil {
		return *m.SoundId
	}
	return 0
}

type SyncResponse_FlashAction struct {
	Red               *int32 `protobuf:"varint,1,opt,name=red" json:"red,omitempty"`
	Green             *int32 `protobuf:"varint,2,opt,name=green" json:"green,omitempty"`
	Blue              *int32 `protobuf:"varint,3,opt,name=blue" json:"blue,omitempty"`
	DelayMilliseconds *int32 `protobuf:"varint,4,opt,name=delay_milliseconds" json:"delay_milliseconds,omitempty"`
	FadeIn            *bool  `protobuf:"varint,5,opt,name=fade_in" json:"fade_in,omitempty"`
	FadeOut           *bool  `protobuf:"varint,6,opt,name=fade_out" json:"fade_out,omitempty"`
	Rotate            *bool  `protobuf:"varint,7,opt,name=rotate" json:"rotate,omitempty"`
	Alpha             *int32 `protobuf:"varint,8,opt,name=alpha" json:"alpha,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *SyncResponse_FlashAction) Reset()         { *m = SyncResponse_FlashAction{} }
func (m *SyncResponse_FlashAction) String() string { return proto.CompactTextString(m) }
func (*SyncResponse_FlashAction) ProtoMessage()    {}

func (m *SyncResponse_FlashAction) GetRed() int32 {
	if m != nil && m.Red != nil {
		return *m.Red
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetGreen() int32 {
	if m != nil && m.Green != nil {
		return *m.Green
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetBlue() int32 {
	if m != nil && m.Blue != nil {
		return *m.Blue
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetDelayMilliseconds() int32 {
	if m != nil && m.DelayMilliseconds != nil {
		return *m.DelayMilliseconds
	}
	return 0
}

func (m *SyncResponse_FlashAction) GetFadeIn() bool {
	if m != nil && m.FadeIn != nil {
		return *m.FadeIn
	}
	return false
}

func (m *SyncResponse_FlashAction) GetFadeOut() bool {
	if m != nil && m.FadeOut != nil {
		return *m.FadeOut
	}
	return false
}

func (m *SyncResponse_FlashAction) GetRotate() bool {
	if m != nil && m.Rotate != nil {
		return *m.Rotate
	}
	return false
}

func (m *SyncResponse_FlashAction) GetAlpha() int32 {
	if m != nil && m.Alpha != nil {
		return *m.Alpha
	}
	return 0
}

type PeriodicData struct {
	UnixTime         *int32                  `protobuf:"varint,1,opt,name=unix_time" json:"unix_time,omitempty"`
	Light            *int32                  `protobuf:"varint,2,opt,name=light" json:"light,omitempty"`
	Temperature      *int32                  `protobuf:"varint,3,opt,name=temperature" json:"temperature,omitempty"`
	Humidity         *int32                  `protobuf:"varint,4,opt,name=humidity" json:"humidity,omitempty"`
	Dust             *int32                  `protobuf:"varint,5,opt,name=dust" json:"dust,omitempty"`
	Name             *string                 `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Mac              []byte                  `protobuf:"bytes,7,opt,name=mac" json:"mac,omitempty"`
	LightVariability *int32                  `protobuf:"varint,8,opt,name=light_variability" json:"light_variability,omitempty"`
	LightTonality    *int32                  `protobuf:"varint,9,opt,name=light_tonality" json:"light_tonality,omitempty"`
	FirmwareVersion  *int32                  `protobuf:"varint,10,opt,name=firmware_version" json:"firmware_version,omitempty"`
	DustVariability  *int32                  `protobuf:"varint,13,opt,name=dust_variability" json:"dust_variability,omitempty"`
	DustMax          *int32                  `protobuf:"varint,14,opt,name=dust_max" json:"dust_max,omitempty"`
	DustMin          *int32                  `protobuf:"varint,15,opt,name=dust_min" json:"dust_min,omitempty"`
	Pills            []*PeriodicDataPillData `protobuf:"bytes,11,rep,name=pills" json:"pills,omitempty"`
	DeviceId         *string                 `protobuf:"bytes,12,opt,name=device_id" json:"device_id,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *PeriodicData) Reset()         { *m = PeriodicData{} }
func (m *PeriodicData) String() string { return proto.CompactTextString(m) }
func (*PeriodicData) ProtoMessage()    {}

func (m *PeriodicData) GetUnixTime() int32 {
	if m != nil && m.UnixTime != nil {
		return *m.UnixTime
	}
	return 0
}

func (m *PeriodicData) GetLight() int32 {
	if m != nil && m.Light != nil {
		return *m.Light
	}
	return 0
}

func (m *PeriodicData) GetTemperature() int32 {
	if m != nil && m.Temperature != nil {
		return *m.Temperature
	}
	return 0
}

func (m *PeriodicData) GetHumidity() int32 {
	if m != nil && m.Humidity != nil {
		return *m.Humidity
	}
	return 0
}

func (m *PeriodicData) GetDust() int32 {
	if m != nil && m.Dust != nil {
		return *m.Dust
	}
	return 0
}

func (m *PeriodicData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PeriodicData) GetMac() []byte {
	if m != nil {
		return m.Mac
	}
	return nil
}

func (m *PeriodicData) GetLightVariability() int32 {
	if m != nil && m.LightVariability != nil {
		return *m.LightVariability
	}
	return 0
}

func (m *PeriodicData) GetLightTonality() int32 {
	if m != nil && m.LightTonality != nil {
		return *m.LightTonality
	}
	return 0
}

func (m *PeriodicData) GetFirmwareVersion() int32 {
	if m != nil && m.FirmwareVersion != nil {
		return *m.FirmwareVersion
	}
	return 0
}

func (m *PeriodicData) GetDustVariability() int32 {
	if m != nil && m.DustVariability != nil {
		return *m.DustVariability
	}
	return 0
}

func (m *PeriodicData) GetDustMax() int32 {
	if m != nil && m.DustMax != nil {
		return *m.DustMax
	}
	return 0
}

func (m *PeriodicData) GetDustMin() int32 {
	if m != nil && m.DustMin != nil {
		return *m.DustMin
	}
	return 0
}

func (m *PeriodicData) GetPills() []*PeriodicDataPillData {
	if m != nil {
		return m.Pills
	}
	return nil
}

func (m *PeriodicData) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

type PeriodicDataPillData struct {
	FirmwareVersion     *int32  `protobuf:"varint,1,opt,name=firmwareVersion" json:"firmwareVersion,omitempty"`
	MotionDataEncrypted []byte  `protobuf:"bytes,2,opt,name=motionDataEncrypted" json:"motionDataEncrypted,omitempty"`
	DeviceId            *string `protobuf:"bytes,3,opt,name=deviceId" json:"deviceId,omitempty"`
	BatteryLevel        *int32  `protobuf:"varint,4,opt,name=batteryLevel" json:"batteryLevel,omitempty"`
	Uptime              *int32  `protobuf:"varint,5,opt,name=uptime" json:"uptime,omitempty"`
	MotionData          *int32  `protobuf:"varint,6,opt,name=motionData" json:"motionData,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *PeriodicDataPillData) Reset()         { *m = PeriodicDataPillData{} }
func (m *PeriodicDataPillData) String() string { return proto.CompactTextString(m) }
func (*PeriodicDataPillData) ProtoMessage()    {}

func (m *PeriodicDataPillData) GetFirmwareVersion() int32 {
	if m != nil && m.FirmwareVersion != nil {
		return *m.FirmwareVersion
	}
	return 0
}

func (m *PeriodicDataPillData) GetMotionDataEncrypted() []byte {
	if m != nil {
		return m.MotionDataEncrypted
	}
	return nil
}

func (m *PeriodicDataPillData) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *PeriodicDataPillData) GetBatteryLevel() int32 {
	if m != nil && m.BatteryLevel != nil {
		return *m.BatteryLevel
	}
	return 0
}

func (m *PeriodicDataPillData) GetUptime() int32 {
	if m != nil && m.Uptime != nil {
		return *m.Uptime
	}
	return 0
}

func (m *PeriodicDataPillData) GetMotionData() int32 {
	if m != nil && m.MotionData != nil {
		return *m.MotionData
	}
	return 0
}

func init() {
	proto.RegisterEnum("hello.SyncResponse_RoomConditions", SyncResponse_RoomConditions_name, SyncResponse_RoomConditions_value)
	proto.RegisterEnum("hello.SyncResponse_PairingAction_ActionType", SyncResponse_PairingAction_ActionType_name, SyncResponse_PairingAction_ActionType_value)
}
